package helper

import (
	"testing"
	"time"
)

func TestDurationFormat(t *testing.T) {

	testCases := []struct {
		s   string
		e   string
		f   string
		out string
	}{
		{"2019-01-01T00:00:00.000000000Z", "2021-01-01T01:00:00.000000000Z", "", "731d 01h 00m 00s"},
		{"2001-01-01T00:00:00.000000000Z", "2001-01-03T01:03:04.100000000Z", "%d:%h:%m:%s.%S", "2:1:3:4.1"},
		{"2001-01-01T00:00:00.000000000Z", "2001-01-03T01:03:04.100000000Z", "%dd:%hh:%mm:%ss.%SS", "02:01:03:04.10"},
		{"2001-01-01T00:00:00.000000000Z", "2001-01-03T01:03:04.100000000Z", "%dd:%hh:%mm:%ss.%SSS", "02:01:03:04.100"},
		{"2021-01-01T00:00:00.000000000Z", "2021-06-23T21:53:54.123456789Z", "%h:%m:%s.%SSS", "4173:53:54.123"},
		{"2021-01-01T00:00:00.000000000Z", "2021-01-01T01:01:01.001000000Z", "%h:%m:%s", "1:1:1"},
		{"2021-01-01T00:00:00.000000000Z", "2021-01-01T01:01:01.001000000Z", "%hh:%mm:%ss", "01:01:01"},
		{"2021-01-01T00:00:00.000000000Z", "2021-01-01T01:01:01.001000000Z", "%h\\h %m\\m %s\\s", "1h 1m 1s"},
		{"2021-01-01T00:00:00.000000000Z", "2021-01-01T01:00:00.000000000Z", "%mm:%ss", "60:00"},
		{"2021-01-01T00:00:00.000000000Z", "2021-01-01T01:30:00.000000000Z", "%mm:%ss", "90:00"},
		{"2021-01-01T00:00:00.000000000Z", "2021-01-01T01:30:00.000000000Z", "%m\\\\m%s\\\\s", "90\\m0\\s"},
		{"2021-01-01T00:00:00.000000000Z", "2021-01-01T01:00:00.000000000Z", "%s", "3600"},
		{"2019-01-01T00:00:00.000000000Z", "2021-01-01T01:00:00.000000000Z", "%SSS", "63162000000"},
		{"2019-01-01T00:00:00.000000000Z", "2021-01-01T01:00:00.000000000Z", "%d\\d %SSS", "731d 3600000"},
		{"2019-01-01T00:00:00.000000000Z", "2021-01-01T01:00:00.000000000Z", "%SS", "6316200000"},
		{"2019-01-01T00:00:00.000000000Z", "2021-01-01T01:00:00.000000000Z", "%S", "631620000"},
		{"2019-01-01T00:00:00.000000000Z", "2021-01-01T01:00:00.000000000Z", "\\%S", "%S"},
		{"2019-01-01T00:00:00.000000000Z", "2021-01-01T01:00:00.000000000Z", "%n", "%n"},
		{"2021-01-01T00:00:00.000000000Z", "2021-01-01T00:00:00.001000000Z", "%F", "00s"},
		{"2021-01-01T00:00:00.000000000Z", "2021-01-01T00:00:01.000000000Z", "%F", "01s"},
		{"2021-01-01T00:00:00.000000000Z", "2021-01-01T00:01:00.000000000Z", "%F", "01m 00s"},
		{"2021-01-01T00:00:00.000000000Z", "2021-01-01T01:00:00.000000000Z", "%F", "01h 00m 00s"},
		{"2021-01-01T00:00:00.000000000Z", "2021-01-02T00:00:00.000000000Z", "%F", "01d 00h 00m 00s"},
		{"2021-01-01T00:00:00.000000000Z", "2021-02-01T00:00:00.000000000Z", "%F", "31d 00h 00m 00s"},
	}
	for _, tC := range testCases {
		t.Run(tC.f, func(t *testing.T) {
			t1, e := time.Parse(time.RFC3339Nano, tC.s)
			t2, e2 := time.Parse(time.RFC3339Nano, tC.e)

			if e != nil || e2 != nil {
				t.Errorf("Bad test cases:\nstart string format err: %s\nend string format error: %s", e, e2)
			} else {

				d := t2.Sub(t1)

				if s := TimeDurationFormat(d, tC.f); s != tC.out {
					t.Errorf("\nInput: TimeDurationFormat( %s, \"%s\" )\nExpected: %s\nGot:      %s", d.String(), tC.f, tC.out, s)
				}
			}
		})
	}

}
